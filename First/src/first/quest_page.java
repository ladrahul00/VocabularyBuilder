/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package first;
import com.mongodb.*;
import java.awt.Color;
import java.awt.HeadlessException;
import java.util.ArrayList;
import java.net.UnknownHostException;
import java.util.Random;
import javax.swing.JOptionPane;
/**
 *
 * @author HACKER
 */
public class quest_page extends javax.swing.JFrame {

    /**
     * Creates new form quest_page
     */
    public static boolean flag;
    String UserId;
    String Category;
    String Level;
    String uans;
    public static String w;
    public static int count;
    public static int wr;
    public static int r;
    public static int dk;
    int out;
    
    public quest_page(){
        initComponents();
    }
    
    public quest_page(String cat,String lev) {
        flag=false;
        Category = cat;
        Level = lev;
        count=0;
        r=0;
        dk=0;
        wr=0;
        UserId = NewJFrame.User_id;
        initComponents();
        jLabel8.setText(UserId);       
        out=page_2.out;
        if(out==1)
        setVisible(true);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    private boolean chk_ans(String a,String w){
        try{
            MongoClient client = new MongoClient();
            DB db = client.getDB("test");
            DBCollection coll = db.getCollection("words");
            BasicDBObject uobj = new BasicDBObject();
            uobj.put("word",w );    
            DBObject wquery = coll.findOne(uobj);
            jLabel11.setVisible(true);
            uans = (String)wquery.get("ans");
            jLabel11.setText("Answer : "+uans);
           // String exp = (String)wquery.get("Exlpain");
           // System.out.println(exp);
           // jLabel14.setVisible(true);
           // jLabel14.setText("Explaination ->");
            
            //jLabel10.setVisible(true);
            //jLabel10.setText(exp);
            if(uans.equals(a))
            {
                jLabel13.setVisible(true);
                jLabel13.setForeground(Color.GREEN);
                jLabel13.setText("Correct Answer");
                repaint();
                client.close();
                return true;
            }
            else{
                jLabel13.setVisible(true);
                jLabel13.setForeground(Color.red);
                jLabel13.setText("Wrong Answer");
                jLabel15.setVisible(true);
                jLabel15.setForeground(Color.red);
                jLabel15.setText("You will see this word soon again");
                repaint();
                client.close();
                return false;
            }
                
            
        }catch(UnknownHostException e){
            System.out.println(e);
        }
        return false;
    }
    
    public int search(ArrayList a,String w){
        for(int i=0;i<a.size();i++){
            String k = String.valueOf(a.get(i));
            if(w.equals(k))
                return i;
        }
        return -1;
    }
    
    public static String random(ArrayList<String> selected)
    {
            String choice2; 
            Random k;
                k = new Random();
            choice2 = selected.get(Math.abs(k.nextInt()%selected.size()));
            //System.out.println(choice2);
            return choice2;	
    }
    
    
       public int countWords(String cat,String level,String Arr){
         try{   
            MongoClient client = new MongoClient();
            DB db = client.getDB("test");
            DBCollection coll = db.getCollection("users");
            BasicDBObject uobj = new BasicDBObject();
            uobj.put("userId", UserId);
            DBObject uquery = coll.findOne(uobj); 
            BasicDBObject catg = (BasicDBObject)uquery.get(cat);
            BasicDBObject levl= (BasicDBObject)catg.get(level);
            ArrayList<String> Correct = (ArrayList) levl.get("Correct");
            ArrayList<String> Wrong = (ArrayList) levl.get("Wrong");
            ArrayList<String> DontKnow = (ArrayList)levl.get("DontKnow");
            ArrayList<String> Repeat = (ArrayList) levl.get("Repeat");
            int k1,k2,k3,k4;
            if(Correct==null)
                k1=0;
            else
                k1=Correct.size();
            if(Wrong==null)
                k2=0;
            else
                k2=Wrong.size();
            if(DontKnow==null)
                k3=0;
            else
                k3=DontKnow.size();
            if(Repeat==null)
                k4=0;
            else
                k4=Repeat.size();
               client.close();

              
               switch (Arr) {
                 case "Correct":
                     return k1;
                 case "Wrong":
                     return k2;
                 case "DontKnow":
                     return k3;
                 default:
                     return k4;
             }
             

               
         }catch(UnknownHostException e){
             System.out.println(e);
         }
        return 0;
    }
 
    
    public void disp_que(){
        try{
            flag=false;
            jLabel13.setVisible(false);
            jLabel15.setVisible(false);
            jLabel14.setVisible(false);
            jLabel10.setVisible(false);
             jLabel11.setVisible(false);
          //  UserId="parth";
           // System.out.println(Category+" + "+Level);
            MongoClient client = new MongoClient();
            DB db = client.getDB("test");
            DBCollection col_user = db.getCollection("users");
            BasicDBObject uobj = new BasicDBObject();
            uobj.put("userId",UserId );    
            DBObject uquery = col_user.findOne(uobj); 
            BasicDBObject cat = (BasicDBObject)uquery.get(Category);
            BasicDBObject levl= (BasicDBObject)cat.get(Level);
            ArrayList<String> Correct = (ArrayList) levl.get("Correct");
            ArrayList<String> Wrong = (ArrayList) levl.get("Wrong");
            ArrayList<String> DontKnow = (ArrayList)levl.get("DontKnow");
            ArrayList<String> Repeat = (ArrayList) levl.get("Repeat"); 
                        
		int num = countWords(Category,Level,"Correct");
                boolean found=false;
                if(num==10)
                    JOptionPane.showMessageDialog(null, "Level Completed, Press back to go for new level");
    		if(wr>=2 && Wrong!=null)
		{
                    if(!Wrong.isEmpty()){
			w = random(Wrong);
                        wr=0;
                        r++;
                        dk++;
                        count++;
                        found=true;
                    }
                    wr=0;
		}
		else if(r>=3 && Repeat!=null)
		{
                    if(!Repeat.isEmpty()){
			w = random(Repeat);
                        r=0;
                        dk++;
                        wr++;
                        count++;
                        found=true;
                    }
		}
		else if(dk>=4 && DontKnow!=null )
		{
                    if(!DontKnow.isEmpty()){
			w = random(DontKnow);
                        dk=0;
                        r++;
                        wr++;
                        count++;
                        found=true;
                    }
		}                
                else if(count>=5 && Correct!=null){
                    
                    if(!Correct.isEmpty()){
                    w = random(Correct);
                    count=0;
                    dk++;
                    r++;
                    wr++;
                    found=true;
                    }
                }
                if(!found){
                   try{ 
                    w = random(Wrong);
                    wr=0;
                    r++;count++;dk++;
                   }catch(Exception e){
                       try{
                        w = random(DontKnow);
                        dk=0;    
                        r++;wr++;count++;
                       }catch(Exception ek){
                           try{ 
                           w=random(Repeat);
                           r=0;
                           dk++;count++;wr++;
                            }catch(Exception er){
                                count=0;
                                w=random(Correct);
                                dk++;wr++;r++;
                            }
                         }     
                    }
                }
            
           // System.out.println(w);
            DBCollection col_words = db.getCollection("words");
            BasicDBObject wobj = new BasicDBObject();
            wobj.append("word",w);    
            DBObject wquery = col_words.findOne(wobj);
         //   System.out.println(wquery);
            String o1 = (String)wquery.get("opt1");
            String o2 = (String)wquery.get("opt2");
            String o3 = (String)wquery.get("opt3");
            String o4 = (String)wquery.get("opt4");
            String a = (String)wquery.get("ans");
            System.out.println("Answer :: "+a);
            jLabel6.setText(w);
            jRadioButton1.setText(o1);
            jRadioButton2.setText(o2);
            jRadioButton3.setText(o3);
            jRadioButton4.setText(o4);
            jRadioButton5.setSelected(true);
            buttonGroup1.add(jRadioButton5);
            buttonGroup1.add(jRadioButton1);
            buttonGroup1.add(jRadioButton2);
            buttonGroup1.add(jRadioButton3);
            buttonGroup1.add(jRadioButton4);   
            repaint();
            client.close();
        }catch(UnknownHostException | HeadlessException e){
            System.out.println(e);
        }
        
    }
    
    private boolean update(String fin,String w){
            try{
            //System.out.println(Category+" + "+Level);
            MongoClient client = new MongoClient();
            DB db = client.getDB("test");
            DBCollection col_user = db.getCollection("users");
            BasicDBObject uobj = new BasicDBObject();
            uobj.put("userId",UserId );    
            DBObject uquery = col_user.findOne(uobj); 
           // System.out.println(uquery);
            BasicDBObject cat = (BasicDBObject)uquery.get(Category);
            BasicDBObject levl1= (BasicDBObject)cat.get("level1");
            BasicDBObject levl2= (BasicDBObject)cat.get("level2");
            BasicDBObject levl3= (BasicDBObject)cat.get("level3");
            BasicDBObject levl4= (BasicDBObject)cat.get("level4");
            BasicDBObject levl;
            BasicDBObject words = new BasicDBObject();
                switch (Level) {
                    case "level1":
                        levl=levl1;
                        words.append("level2",levl2);
                        words.append("level3",levl3);
                        words.append("level4",levl4);
                        break;
                    case "level2":
                        levl = levl2;
                        words.append("level1",levl1);
                        words.append("level3",levl3);
                        words.append("level4",levl4);
                        break;
                    case "level3":
                        words.append("level1",levl1);
                        words.append("level2",levl2);
                        words.append("level4",levl4);
                        levl = levl3;
                        break;
                    default:
                        levl = levl4;
                        words.append("level1",levl1);
                        words.append("level2",levl2);
                        words.append("level3",levl3);
                        break;
                }
            
            ArrayList<String> Correct = (ArrayList) levl.get("Correct");
            ArrayList<String> Wrong = (ArrayList) levl.get("Wrong");
            ArrayList<String> DontKnow = (ArrayList)levl.get("DontKnow");
            ArrayList<String> Repeat = (ArrayList) levl.get("Repeat"); 
                String init="";
              //  System.out.println(w);
                if(Correct!=null){
                    if(Correct.contains(w))
                        init = "Correct";
                }
                if(Wrong!=null)
                if(Wrong.contains(w))
                    init = "Wrong";
                if(DontKnow!=null)
                if(DontKnow.contains(w))
                    init = "DontKnow";
                if(Repeat!=null)
                if(Repeat.contains(w))
                    init = "Repeat";  
                if(init.equals(fin))
                    return true;
                jLabel13.setVisible(true);
               // System.out.println("Initial position : "+init);
                if(init.equals("Correct") && fin.equals("Wrong")){                
                    if(Wrong==null)
                        Wrong = new ArrayList();
                    Wrong.add(w);
                        Correct.remove(w);
                        repaint();
                }
                else if(init.equals("Correct") && fin.equals("DontKnow")){
                    if(DontKnow==null)
                        DontKnow = new ArrayList();
                    Correct.remove(w);
                    DontKnow.add(w);
                    jLabel13.setForeground(Color.white);
                    jLabel13.setText("Dont Know!!!");
                    jLabel15.setForeground(Color.white);
                    jLabel15.setText("You will see this word again");
                    repaint();
                }
                else if(init.equals("Wrong") && fin.equals("Correct")){
                    if(Repeat==null)
                        Repeat = new ArrayList();
                    Repeat.add(w);
                    Wrong.remove(w);
                    jLabel15.setForeground(Color.yellow);
                    jLabel15.setText("This word will be repeated once again");                
                    repaint();
                }
                else if(init.equals("Wrong") && fin.equals("DontKnow")){
                    if(DontKnow==null)
                        DontKnow = new ArrayList();                
                    DontKnow.add(w);
                    Wrong.remove(w);
                    jLabel13.setForeground(Color.white);
                    jLabel13.setText("Dont know!!!!");  
                    jLabel15.setForeground(Color.white);
                    jLabel15.setText("You will see this word again");
                    repaint();
                }
                else if(init.equals("DontKnow") && fin.equals("Correct")){
                    if(Repeat==null)
                        Repeat = new ArrayList();                
                    Repeat.add(w);
                    DontKnow.remove(w);
                    jLabel15.setForeground(Color.yellow);
                    jLabel15.setText("You will see this word once again");
                    repaint();
                }
                else if(init.equals("DontKnow") && fin.equals("Wrong")){
                    if(Wrong==null)
                        Wrong = new ArrayList();                
                    Wrong.add(w);
                    DontKnow.remove(w);                
                    repaint();
                }
                else if(init.equals("Repeat") && fin.equals("DontKnow")){
                    if(DontKnow==null)
                        DontKnow = new ArrayList();                
                    DontKnow.add(w);
                    Repeat.remove(w);
                    jLabel13.setForeground(Color.white);
                    jLabel13.setText("Dont Know!!!");  
                    jLabel15.setForeground(Color.white);
                    jLabel15.setText("You will see this word again");
                    repaint();
                }
                else if(init.equals("Repeat") && fin.equals("Correct")){
                    jLabel15.setForeground(Color.green);
                    jLabel15.setText("You will not see this word for some time");
                    if(Correct==null)
                        Correct = new ArrayList();                
                    Correct.add(w);
                    Repeat.remove(w);
                    repaint();
                }
                else if(init.equals("Repeat") && fin.equals("Wrong")){
                    if(Wrong==null)
                        Wrong = new ArrayList();                
                    Wrong.add(w);
                    Repeat.remove(w);               
                    repaint();
                }
                    
                    BasicDBObject sectn = new BasicDBObject("Correct",Correct)
                            .append("Wrong",Wrong)
                            .append("DontKnow",DontKnow)
                            .append("Repeat",Repeat);
                   // System.out.println(sectn);
                
                    words.append(Level,sectn);
                    BasicDBObject newobj = new BasicDBObject();
                    newobj.append("$set",new BasicDBObject(Category, words));

                    BasicDBObject u_obj = new BasicDBObject().append("userId", UserId);

                   col_user.update(u_obj,newobj);
                   client.close();
            }catch(UnknownHostException e){
                System.out.println(e);
            }


            if(out==1)    
                setVisible(false);
        return true;
    }
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jRadioButton5 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(139, 1, 252));

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Word :");

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Option 1 :");

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Option 2 :");

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Option 3 :");

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Option 4 :");

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("jLabel6");

        jRadioButton1.setBackground(new java.awt.Color(139, 1, 252));
        jRadioButton1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jRadioButton1.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton1.setText("jRadioButton1");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setBackground(new java.awt.Color(139, 1, 252));
        jRadioButton2.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jRadioButton2.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton2.setText("jRadioButton2");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setBackground(new java.awt.Color(139, 1, 252));
        jRadioButton3.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jRadioButton3.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton3.setText("jRadioButton3");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jRadioButton4.setBackground(new java.awt.Color(139, 1, 252));
        jRadioButton4.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jRadioButton4.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton4.setText("jRadioButton4");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("jLabel8");

        jLabel7.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Welcome");

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("----------------------------------------------------------------------------------------------------------------------------------------------------------");

        jLabel13.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("jLabel13");

        jLabel14.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("jLabel14");

        jLabel15.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("jLabel15");

        jRadioButton5.setBackground(new java.awt.Color(139, 1, 252));
        jRadioButton5.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jRadioButton5.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton5.setText("Don't Know");
        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(181, 230, 29));
        jButton1.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("jLabel10");

        jButton2.setText("Next Question");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 153));
        jLabel11.setText("jLabel11");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addGap(172, 172, 172)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel13)
                    .addComponent(jLabel15)
                    .addComponent(jLabel14)
                    .addComponent(jLabel10)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jRadioButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6)
                            .addComponent(jRadioButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jRadioButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jRadioButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jRadioButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jRadioButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jRadioButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jRadioButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jRadioButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addGap(10, 10, 10)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 531, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        if(flag==false){
        uans="c";// TODO add your handling code here:
        flag=true;
        if(chk_ans(uans,w)){
            update("Correct",w);
        }else{
            update("Wrong",w);
        }  }
        
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        if(flag==false){uans = "a";// TODO add your handling code here:
        flag=true;
        if(chk_ans(uans,w)){
            update("Correct",w);
        }else{
            update("Wrong",w);
        }        
        }
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        if(flag==false){
        uans = "b"; // TODO add your handling code here:
        flag=true;
        if(chk_ans(uans,w)){
            update("Correct",w);
        }else{
            update("Wrong",w);
        } 
        }
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        if(flag==false){
        uans = "d";// TODO add your handling code here:
        flag=true;
        if(chk_ans(uans,w)){
            update("Correct",w);
        }else{
            update("Wrong",w);
        }        
        }
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        flag=true;
        setVisible(false);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        flag=false;
            jRadioButton5.setSelected(false);
            jRadioButton1.setSelected(false);
            jRadioButton2.setSelected(false);
            jRadioButton3.setSelected(false);
            jRadioButton4.setSelected(false);
        disp_que();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed
        if(flag==false){
            try{
            MongoClient client = new MongoClient();
            DB db = client.getDB("test");
            DBCollection coll = db.getCollection("words");
            BasicDBObject uobj = new BasicDBObject();
            uobj.put("word",w );    
            DBObject wquery = coll.findOne(uobj);

            uans = (String)wquery.get("ans");
            System.out.println(uans);
            String exp = (String)wquery.get("Exlpain");
           // System.out.println(exp);
            jLabel14.setVisible(true);
            jLabel14.setText("Explaination ->");
            
            jLabel10.setVisible(true);
            jLabel10.setText(exp);
            client.close();
                
            }catch(UnknownHostException e){
                System.out.println(e);
            }
        update("DontKnow",w);
        flag=true;
        }
    }//GEN-LAST:event_jRadioButton5ActionPerformed


    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(quest_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
       // quest_page que = new quest_page();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new quest_page().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    // End of variables declaration//GEN-END:variables
}

